language: cpp
dist: trusty
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.9
      env: COMPILER=gcc GCC=4.9
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-5
      env: COMPILER=gcc GCC=5
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
      env: COMPILER=gcc GCC=6
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
      env: COMPILER=gcc GCC=7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
      compiler: clang
      env: COMPILER=clang CLANG=3.6
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.7
          packages:
            - clang-3.7
      compiler: clang
      env: COMPILER=clang CLANG=3.7
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.8
          packages:
            - clang-3.8
      compiler: clang
      env: COMPILER=clang CLANG=3.8
    - os: osx
      osx_image: xcode8
      compiler: clang
  allow_failures:
    - compiler: clang
env:
  global:
    - MINCONDA_VERSION="4.3.21"
    - MINCONDA_LINUX="Linux-x86_64"
    - MINCONDA_OSX="MacOSX-x86_64"
before_install:
    - |
      # Configure build variables
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        if [[ "$COMPILER" == "gcc" ]]; then
          export CXX=g++-$GCC CC=gcc-$GCC;
        fi
        if [[ "$COMPILER" == "clang" ]]; then
          export CXX=clang++-$CLANG CC=clang-$CLANG;
        fi
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        export CXX=clang++ CC=clang PYTHONHOME=$HOME/miniconda;
      fi
    - |
      # Install Latex for CRAN package check
      if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-$GCC 60 --slave /usr/bin/g++ g++ /usr/bin/g++-$GCC;
        sudo apt-get install -y texlive-latex-base texlive-latex-recommended texinfo texlive-fonts-extra texlive-fonts-recommended;
      fi

install:
    # Define the version of miniconda to download
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
        MINCONDA_OS=$MINCONDA_LINUX;
      elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
        MINCONDA_OS=$MINCONDA_OSX;
      fi
    - if [[ "$PY" == "3" ]]; then
          wget "http://repo.continuum.io/miniconda/Miniconda3-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
      else
          wget "http://repo.continuum.io/miniconda/Miniconda2-$MINCONDA_VERSION-$MINCONDA_OS.sh" -O miniconda.sh;
      fi
    - bash miniconda.sh -b -p $HOME/miniconda
    - export PATH="$HOME/miniconda/bin:$PATH"
    - hash -r
    - conda config --set always_yes yes --set changeps1 no
    - conda update -q conda
    # Host dependencies
    - conda install r-base r-rcpp xtensor==0.20.8 -c conda-forge
    # Build dependencies
    - conda install cmake -c conda-forge
    # Test dependencies
    - conda install r-rinside r-devtools r-testthat -c conda-forge
    # Build
    - mkdir build
    - cd build
    - cmake -D DOWNLOAD_GTEST=ON -D CMAKE_INSTALL_PREFIX=$HOME/miniconda -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX ..
    - cmake --build . --target test_xtensor_r
    - cmake --build . --target install
    # Install R package
    - export TAR="/bin/tar"
    - R -e "library(devtools); install_github('xtensor-stack/Xtensor.R', configure.args = '--novendor')"

script:
    # Run C++ tests
    - cd test
    - ./test_xtensor_r
    # Run R package tests
    - mkdir ~/.R
    - touch ~/.R/Makevars
    - echo "CXX14=$CXX" >> ~/.R/Makevars
    - echo "CXX14FLAGS=-fPIC -O2" >> ~/.R/Makevars
    - cd ../../test
    - Rscript ./unittest.R
